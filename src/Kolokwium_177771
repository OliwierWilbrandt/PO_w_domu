public class Kolokwium_177771 {

    public static void main(String[] args) {

//        System.out.print("Zadanie 6\n");
////        int liczba = 15;
////
////        if (czypalindrom(liczba)) {
////            System.out.println("true");
////        } else {
////            System.out.println("false");
////        }
//
////        System.out.print("Zadanie 4\n");
////
////        int[] tablica1={5, 4, 3, 2, 1};
////        int[] tablica2={1, 3, 2, 1, 5, 4};
////        int[] tablica3={5, 1};
////
////        System.out.println("Długosc najdluzszego podciagu malejacego: " + podciag(tablica1));
////        System.out.println("Długosc najdluzszego podciagu malejavego: " + podciag(tablica2) );
////        System.out.println("Długosc najdluzszego podciagu malejacego: " + podciag(tablica3) );


//        System.out.print("Zadanie 5\n");
//
//        int[] tablica1={10, 8, 6, 4, 2};
//        int[] tablica2={15, 12, 9, 3, 1};
//        int[] tablica3={2, 0};
//
//        System.out.println("Długosc najdluzszego podciagu malejacego o r: " + podciag(tablica1, 2));
//        System.out.println("Długosc najdluzszego podciagu malejacego o r: " + podciag(tablica2, 3) );
//        System.out.println("Długosc najdluzszego podciagu malejacego o r: " + podciag(tablica3,2) );


//        System.out.print("Zadanie 7\n");
//
//        int m=2;
//        palindromliczbowy(m);


//        System.out.print("Zadanie 1\n");
//
//        double x = 8.877;
//        double y = 8.873;
//        double k = 0.01;
//
//        if (dokladnosc(x, y, k)) {
//            System.out.println("true");
//        } else {
//            System.out.println("false");
//        }

        
    }


    //Zadanie 6

//    public static boolean czypalindrom(int n) {
//        int poczatkowaliczba = n;
//        int odwroconaliczba = 0;
//
//        while (n != 0) {
//            int ostatniacyfra = n % 10;
//            odwroconaliczba = odwroconaliczba * 10 + ostatniacyfra;
//            n = n / 10;
//        }
//        return poczatkowaliczba == odwroconaliczba;
//    }


    //Zadnie 4


//    public static int podciag(int [] tablica) {
//        if (tablica.length == 0) return 0;
//
//        int maxdlugosc = 1;
//        int dlugoscaktualna =  1;
//
//        for (int i=1; i< tablica.length; i++) {
//            if (tablica[i] < tablica[i-1]) {
//                dlugoscaktualna++;
//                maxdlugosc = Math.max(maxdlugosc, dlugoscaktualna);
//            }else {
//                dlugoscaktualna = 1;
//            }
//        }
//
//        return maxdlugosc;
//    }


    //Zadanie 5

//    public static int podciag(int[] tablica, int r) {
//        if (tablica.length == 0) return 0;
//
//        int maxdlugosc = 1;
//        int dlugoscaktualna = 1;
//
//        for (int i=1; i< tablica.length;i++) {
//            if (tablica[i] == tablica[i-1] - r) {
//                dlugoscaktualna++;
//                maxdlugosc = Math.max(maxdlugosc, dlugoscaktualna);
//            }else {
//                dlugoscaktualna = 1;
//            }
//        }
//
//        return maxdlugosc;
//    }


    //Zadanie 7

//    public static boolean czypalindrom(int liczba) {
//        String str = Integer.toString(liczba);
//        int left = 0, right = str.length() - 1;
//
//
//        while (left < right) {
//            if (str.charAt(left) != str.charAt(right)) {
//                return false;
//            }
//            left++;
//            right--;
//        }
//        return true;
//    }
//
//
//    public static void palindromliczbowy(int m) {
//        int start = (int) Math.pow(10, m - 1);
//        int end = (int) Math.pow(10, m) - 1;
//
//        boolean znaleziono = false;
//
//        for (int i = end; i >= start; i--) {
//            for (int j = i; j >= start; j--) {
//                int iloczyn = i * j;
//
//                if (czypalindrom(iloczyn)) {
//                    System.out.println(i + " * " + j + " = " + iloczyn);
//                    znaleziono = true;
//                    return;
//                }
//            }
//        }
//
//
//        if (!znaleziono) {
//            System.out.println("Nie zanleziono liczb" + m + " cyfrowych tworzacych palindrom liczbowy");
//
//        }


    //Zadanie 1

//    public static boolean dokladnosc(double x, double y, double k) {
//
//        return Math.abs(x - y) <k;
//    }
    
}
